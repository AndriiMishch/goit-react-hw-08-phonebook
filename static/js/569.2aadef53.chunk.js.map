{"version":3,"file":"static/js/569.2aadef53.chunk.js","mappings":"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","sources":["components/ContactEditModal/index.jsx","components/ContactList/ContactListItem/index.jsx","redux/filtres/selectors.js","redux/contacts/selectors.js","components/CardLoading/index.jsx","components/ContactList/index.jsx","components/ContactFormModal/index.jsx","components/ContactSearch/index.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import React, { useState } from 'react'; // Import useState from 'react' explicitly\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport EditIcon from '@mui/icons-material/Edit';\nimport IconButton from '@mui/material/IconButton'; // Import IconButton from '@mui/material'\nimport Box from '@mui/material/Box';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from '@mui/material/FormControl';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport { MuiTelInput } from 'mui-tel-input'; // Import MuiTelInput separately\nimport { useDispatch } from 'react-redux';\nimport { changeContact } from 'redux/contacts/actions';\nimport { toast } from 'react-hot-toast';\n\nexport default function ContactEditModal({ contact }) {\n  const dispatch = useDispatch();\n\n  const [contactName, setContactName] = useState(contact.name); // Use useState directly\n  const onNameChange = newValue => {\n    setContactName(newValue);\n  };\n\n  const [phoneNumber, setPhoneNumber] = useState(contact.number);\n\n  const onInputChange = newValue => {\n    setPhoneNumber(newValue);\n  };\n\n  const [open, setOpen] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    const contactData = {\n      user: {\n        name,\n        number,\n      },\n      id: contact.id,\n    };\n\n    toast.promise(\n      dispatch(changeContact(contactData)).unwrap(),\n      {\n        loading: 'Loading',\n        success: data => `Contact ${data.name} was changed`,\n        error: err => ` ${err.toString()}`,\n      },\n      {\n        style: {\n          minWidth: '250px',\n        },\n        success: {\n          duration: 5000,\n          icon: '✍️',\n        },\n      }\n    );\n    handleClose();\n    form.reset();\n  };\n\n  return (\n    <>\n      <IconButton\n        edge=\"end\"\n        aria-label=\"change\"\n        sx={{ mr: 2 }}\n        onClick={handleClickOpen}\n      >\n        <EditIcon color=\"success\" />\n      </IconButton>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          Change contact \"{contact.name}\"\n        </DialogTitle>\n        <DialogContent>\n          <Box sx={{ '& > :not(style)': { m: 1 } }}>\n            <form onSubmit={onFormSubmit}>\n              <Box style={{ display: 'flex', gap: 20 }}>\n                <FormControl variant=\"standard\">\n                  <InputLabel htmlFor=\"input-with-icon-adornment-name\">\n                    Contact Name\n                  </InputLabel>\n                  <Input\n                    value={contactName}\n                    onChange={e => onNameChange(e.target.value)}\n                    autoComplete=\"off\"\n                    required\n                    size=\"normal\"\n                    name=\"name\"\n                    id=\"input-with-icon-adornment-name\"\n                    startAdornment={\n                      <InputAdornment position=\"start\">\n                        <AccountCircle />\n                      </InputAdornment>\n                    }\n                  />\n                </FormControl>\n\n                <FormControl variant=\"standard\">\n                  <MuiTelInput\n                    autoFocus\n                    value={phoneNumber}\n                    onChange={onInputChange}\n                    variant=\"outlined\"\n                    sx={{ mt: 1 }}\n                    size=\"small\"\n                    continents={['EU']}\n                    defaultCountry=\"UA\"\n                    placeholder=\"Contact Number\"\n                    name=\"number\"\n                    id=\"input-with-icon-adornment-number\"\n                  />\n                </FormControl>\n              </Box>\n\n              <DialogActions sx={{ mt: 3, mb: -3, mr: -3 }}>\n                <Button onClick={handleClose} autoFocus color=\"error\">\n                  Close\n                </Button>\n\n                <Button type=\"submit\" color=\"success\">\n                  Change\n                </Button>\n              </DialogActions>\n            </form>\n          </Box>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/actions';\nimport * as React from 'react';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ContactEditModal from 'components/ContactEditModal';\nimport { toast } from 'react-hot-toast';\n\nfunction stringToColor(string) {\n  let hash = 0;\n  let i;\n\n  /* eslint-disable no-bitwise */\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.slice(-2);\n  }\n  /* eslint-enable no-bitwise */\n\n  return color;\n}\n\nfunction stringAvatar(name) {\n  return {\n    sx: {\n      bgcolor: stringToColor(name),\n    },\n    children: `${name.split(' ')[0][0]}`,\n  };\n}\n\nexport default function ContactListItem({ contact }) {\n  const dispatch = useDispatch();\n\n  const handleContactDelete = () => {\n    toast.promise(\n      dispatch(deleteContact(contact.id)).unwrap(),\n      {\n        loading: 'Loading',\n        success: data => `Contact ${data.name} was deleted`,\n        error: err => `${err.toString()}`,\n      },\n      {\n        style: {\n          minWidth: '250px',\n        },\n        success: {\n          duration: 5000,\n          icon: '🔥',\n        },\n      }\n    );\n  };\n\n  return (\n    <ListItem\n      secondaryAction={\n        <>\n          <ContactEditModal contact={contact} />\n\n          <IconButton\n            edge=\"end\"\n            aria-label=\"delete\"\n            onClick={handleContactDelete}\n          >\n            <DeleteIcon color=\"error\" />\n          </IconButton>\n        </>\n      }\n    >\n      <ListItemAvatar>\n        <Avatar {...stringAvatar(contact.name)}></Avatar>\n      </ListItemAvatar>\n      <ListItemText primary={contact.name} secondary={contact.number} />\n    </ListItem>\n  );\n}","export const selectFiltersSearch = state => state.filters.search;","import { selectFiltersSearch } from 'redux/filtres/selectors';\nimport { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFiltersSearch],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectContactsCount = state => state.contacts.contacts.length;","import * as React from 'react';\nimport LinearProgress from '@mui/material/LinearProgress';\n\nexport default function CardLoading() {\n  return <LinearProgress />;\n}","import ContactListItem from './ContactListItem';\nimport {\n  selectFilteredContacts,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { useSelector } from 'react-redux';\nimport CardLoading from 'components/CardLoading';\nimport { Grid } from '@mui/material';\nimport { List } from '@mui/material';\n\nexport default function ContactList() {\n  const contacts = useSelector(selectFilteredContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <>\n      <Grid item xs={12} md={6}>\n        <List>\n          {contacts.map(contact => (\n            <div key={contact.id}>\n              <ContactListItem contact={contact} />\n            </div>\n          ))}\n        </List>\n      </Grid>\n\n      {isLoading && <CardLoading />}\n    </>\n  );\n}","import { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/actions';\nimport * as React from 'react';\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Box from '@mui/material/Box';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from '@mui/material/FormControl';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { SpeedDialIcon } from '@mui/material';\nimport { SpeedDial } from '@mui/material';\nimport { Button } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport { MuiTelInput, matchIsValidTel } from 'mui-tel-input';\nimport { Toaster, toast } from 'react-hot-toast';\n\nexport default function ContactForModal() {\n  const [phoneNumber, setPhoneNumber] = React.useState('');\n  const [phoneNumberValid, setPhoneNumberValid] = React.useState(null);\n  const handleInputChange = newValue => {\n    setPhoneNumber(newValue);\n    setPhoneNumberValid(matchIsValidTel(newValue));\n  };\n\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const dispatch = useDispatch();\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    const newContact = {\n      name,\n      number,\n    };\n\n    toast.promise(\n      dispatch(addContact(newContact)).unwrap(),\n      {\n        loading: 'Loading',\n        success: data => `Contact ${data.name} was added`,\n        error: err => `${err.toString()}`,\n      },\n      {\n        style: {\n          minWidth: '250px',\n        },\n        success: {\n          duration: 5000,\n        },\n      }\n    );\n    handleClose();\n    setPhoneNumber('');\n    setPhoneNumberValid(false);\n    form.reset();\n  };\n\n  return (\n    <div>\n      <SpeedDial\n        ariaLabel=\"SpeedDial openIcon example\"\n        sx={{ position: 'absolute', bottom: 100, right: 16 }}\n        icon={<SpeedDialIcon openIcon={<EditIcon />} />}\n        onClick={handleClickOpen}\n      ></SpeedDial>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Add new contact</DialogTitle>\n        <DialogContent>\n          <Box sx={{ '& > :not(style)': { m: 1 } }}>\n            <form onSubmit={onFormSubmit}>\n              <Box style={{ display: 'flex', gap: 20 }}>\n                <FormControl variant=\"standard\">\n                  <InputLabel htmlFor=\"input-with-icon-adornment-name\">\n                    Contact Name\n                  </InputLabel>\n                  <Input\n                    autoComplete=\"off\"\n                    required\n                    size=\"normal\"\n                    name=\"name\"\n                    id=\"input-with-icon-adornment-name\"\n                    startAdornment={\n                      <InputAdornment position=\"start\">\n                        <AccountCircle />\n                      </InputAdornment>\n                    }\n                  />\n                </FormControl>\n\n                <FormControl variant=\"standard\">\n                  <MuiTelInput\n                    variant=\"outlined\"\n                    sx={{ mt: 1 }}\n                    size=\"small\"\n                    continents={['EU']}\n                    defaultCountry=\"UA\"\n                    placeholder=\"Contact Number\"\n                    name=\"number\"\n                    id=\"input-with-icon-adornment-number\"\n                    value={phoneNumber}\n                    onChange={handleInputChange}\n                  />\n                </FormControl>\n              </Box>\n\n              <Button\n                disabled={!phoneNumberValid}\n                type=\"submit\"\n                sx={{ float: 'right', mt: 2 }}\n                endIcon={<SendIcon />}\n              >\n                Add\n              </Button>\n            </form>\n          </Box>\n        </DialogContent>\n      </Dialog>\n\n      <Toaster />\n    </div>\n  );\n}","import * as React from 'react';\nimport { TextField } from '@mui/material';\nimport { Box } from '@mui/material';\nimport { selectFiltersSearch } from 'redux/filtres/selectors';\nimport { useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/filtres/slice';\nimport { useDispatch } from 'react-redux';\n\nexport default function ContactSearch() {\n  const dispatch = useDispatch();\n  const searchValue = useSelector(selectFiltersSearch);\n\n  const onSearchChange = newValue => {\n    dispatch(changeFilter(newValue));\n  };\n\n  return (\n    <Box\n      component=\"div\"\n      sx={{\n        '& > :not(style)': { m: 1, width: '25ch' },\n        display: 'flex',\n        justifyContent: 'center',\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <TextField\n        id=\"filled-basic\"\n        label=\"Search Contacts\"\n        variant=\"filled\"\n        value={searchValue}\n        onChange={e => onSearchChange(e.target.value)}\n      />\n    </Box>\n  );\n}","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/contacts/actions';\nimport ContactList from 'components/ContactList';\nimport ContactFormModal from 'components/ContactFormModal';\nimport { useSelector } from 'react-redux';\nimport { selectContactsCount } from 'redux/contacts/selectors';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport ContactSearch from 'components/ContactSearch';\n// import { useLocation } from 'react-router-dom';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  // const location = useLocation();\n\n  const contactsCount = useSelector(selectContactsCount);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {contactsCount === 0 && !isLoading && (\n        <div\n          style={{\n            textAlign: 'center',\n            marginTop: 300,\n          }}\n        >\n          <h1 style={{ marginBottom: 20 }}>You have no contacts yet</h1>\n        </div>\n      )}\n      {contactsCount > 0 && <ContactSearch />} <ContactFormModal />\n      <ContactList />\n    </>\n  );\n}"],"names":["ContactEditModal","_ref","contact","dispatch","useDispatch","_useState","useState","name","_useState2","_slicedToArray","contactName","setContactName","_useState3","number","_useState4","phoneNumber","setPhoneNumber","_useState5","_useState6","open","setOpen","handleClose","_jsxs","_Fragment","children","_jsx","IconButton","edge","sx","mr","onClick","EditIcon","color","Dialog","onClose","DialogTitle","id","DialogContent","Box","m","onSubmit","e","preventDefault","form","target","contactData","user","elements","value","toast","changeContact","unwrap","loading","success","data","concat","error","err","toString","style","minWidth","duration","icon","reset","display","gap","FormControl","variant","InputLabel","htmlFor","Input","onChange","newValue","autoComplete","required","size","startAdornment","InputAdornment","position","AccountCircle","MuiTelInput","autoFocus","mt","continents","defaultCountry","placeholder","DialogActions","mb","Button","type","stringToColor","string","i","hash","length","charCodeAt","slice","ContactListItem","ListItem","secondaryAction","deleteContact","DeleteIcon","ListItemAvatar","Avatar","_objectSpread","bgcolor","split","ListItemText","primary","secondary","selectFiltersSearch","state","filters","search","selectFilteredContacts","createSelector","contacts","filter","normalizedFilter","toLowerCase","includes","selectIsLoading","isLoading","selectContactsCount","CardLoading","LinearProgress","ContactList","useSelector","Grid","item","xs","md","List","map","ContactForModal","_React$useState","React","_React$useState2","_React$useState3","_React$useState4","phoneNumberValid","setPhoneNumberValid","_React$useState5","_React$useState6","SpeedDial","ariaLabel","bottom","right","SpeedDialIcon","openIcon","newContact","addContact","matchIsValidTel","disabled","float","endIcon","SendIcon","Toaster","ContactSearch","searchValue","component","width","justifyContent","noValidate","TextField","label","changeFilter","ContactsPage","contactsCount","useEffect","getContacts","textAlign","marginTop","marginBottom","ContactFormModal"],"sourceRoot":""}