{"version":3,"file":"static/js/26.7d376807.chunk.js","mappings":"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","sources":["components/RegisterForm/index.jsx","pages/RegisterPage.jsx","../node_modules/@mui/material/CssBaseline/CssBaseline.js","../node_modules/@mui/private-theming/useTheme/ThemeContext.js","../node_modules/@mui/private-theming/useTheme/useTheme.js","../node_modules/@mui/private-theming/ThemeProvider/nested.js","../node_modules/@mui/private-theming/ThemeProvider/ThemeProvider.js","../node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js","../node_modules/@mui/material/styles/ThemeProvider.js"],"sourcesContent":["import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { Link } from 'react-router-dom';\nimport toast from 'react-hot-toast';\n\nconst defaultTheme = createTheme();\n\nexport default function SignUp() {\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const userData = {\n      name: data.get('firstName') + ' ' + data.get('lastName'),\n      email: data.get('email'),\n      password: data.get('password'),\n    };\n\n    toast.promise(\n      dispatch(register(userData)).unwrap(),\n      {\n        loading: 'Loading',\n        success: data => {\n          return `You have signed up`;\n        },\n        error: err => `Invalid data`,\n      },\n      {\n        success: {\n          duration: 5000,\n        },\n      }\n    );\n    event.target.reset();\n  };\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleSubmit}\n            sx={{ mt: 3 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  autoComplete=\"given-name\"\n                  name=\"firstName\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  autoFocus\n                  placeholder=\"Sherlock\"\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  autoComplete=\"family-name\"\n                  placeholder=\"Holmes\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  placeholder=\"user@mail.com\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n\n            <Link to=\"/login\">Already have an account? Log In</Link>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}","import SignUp from 'components/RegisterForm';\n\nexport default function RegisterPage() {\n  return <SignUp />;\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport useThemeProps from '../styles/useThemeProps';\nimport GlobalStyles from '../GlobalStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const html = (theme, enableColorScheme) => _extends({\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box',\n  // Fix font resize problem in iOS\n  WebkitTextSizeAdjust: '100%'\n}, enableColorScheme && !theme.vars && {\n  colorScheme: theme.palette.mode\n});\nexport const body = theme => _extends({\n  color: (theme.vars || theme).palette.text.primary\n}, theme.typography.body1, {\n  backgroundColor: (theme.vars || theme).palette.background.default,\n  '@media print': {\n    // Save printer ink.\n    backgroundColor: (theme.vars || theme).palette.common.white\n  }\n});\nexport const styles = (theme, enableColorScheme = false) => {\n  var _theme$components;\n  const colorSchemeStyles = {};\n  if (enableColorScheme && theme.colorSchemes) {\n    Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {\n      var _scheme$palette;\n      colorSchemeStyles[theme.getColorSchemeSelector(key).replace(/\\s*&/, '')] = {\n        colorScheme: (_scheme$palette = scheme.palette) == null ? void 0 : _scheme$palette.mode\n      };\n    });\n  }\n  let defaultStyles = _extends({\n    html: html(theme, enableColorScheme),\n    '*, *::before, *::after': {\n      boxSizing: 'inherit'\n    },\n    'strong, b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    body: _extends({\n      margin: 0\n    }, body(theme), {\n      // Add support for document.body.requestFullScreen().\n      // Other elements, if background transparent, are not supported.\n      '&::backdrop': {\n        backgroundColor: (theme.vars || theme).palette.background.default\n      }\n    })\n  }, colorSchemeStyles);\n  const themeOverrides = (_theme$components = theme.components) == null || (_theme$components = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components.styleOverrides;\n  if (themeOverrides) {\n    defaultStyles = [defaultStyles, themeOverrides];\n  }\n  return defaultStyles;\n};\n\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\nfunction CssBaseline(inProps) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCssBaseline'\n  });\n  const {\n    children,\n    enableColorScheme = false\n  } = props;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GlobalStyles, {\n      styles: theme => styles(theme, enableColorScheme)\n    }), children]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n  /**\n   * Enable `color-scheme` CSS property to use `theme.palette.mode`.\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   * @default false\n   */\n  enableColorScheme: PropTypes.bool\n} : void 0;\nexport default CssBaseline;","import * as React from 'react';\nconst ThemeContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  ThemeContext.displayName = 'ThemeContext';\n}\nexport default ThemeContext;","import * as React from 'react';\nimport ThemeContext from './ThemeContext';\nexport default function useTheme() {\n  const theme = React.useContext(ThemeContext);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n  return theme;\n}","const hasSymbol = typeof Symbol === 'function' && Symbol.for;\nexport default hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@mui/utils';\nimport ThemeContext from '../useTheme/ThemeContext';\nimport useTheme from '../useTheme';\nimport nested from './nested';\n\n// To support composition of theme.\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    const mergedTheme = localTheme(outerTheme);\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['MUI: You should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n    return mergedTheme;\n  }\n  return _extends({}, outerTheme, localTheme);\n}\n\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  const outerTheme = useTheme();\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const theme = React.useMemo(() => {\n    const output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/_jsx(ThemeContext.Provider, {\n    value: theme,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as MuiThemeProvider, useTheme as usePrivateTheme } from '@mui/private-theming';\nimport { exactProp } from '@mui/utils';\nimport { ThemeContext as StyledEngineThemeContext } from '@mui/styled-engine';\nimport useThemeWithoutDefault from '../useThemeWithoutDefault';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst EMPTY_THEME = {};\nfunction useThemeScoping(themeId, upperTheme, localTheme, isPrivate = false) {\n  return React.useMemo(() => {\n    const resolvedTheme = themeId ? upperTheme[themeId] || upperTheme : upperTheme;\n    if (typeof localTheme === 'function') {\n      const mergedTheme = localTheme(resolvedTheme);\n      const result = themeId ? _extends({}, upperTheme, {\n        [themeId]: mergedTheme\n      }) : mergedTheme;\n      // must return a function for the private theme to NOT merge with the upper theme.\n      // see the test case \"use provided theme from a callback\" in ThemeProvider.test.js\n      if (isPrivate) {\n        return () => result;\n      }\n      return result;\n    }\n    return themeId ? _extends({}, upperTheme, {\n      [themeId]: localTheme\n    }) : _extends({}, upperTheme, localTheme);\n  }, [themeId, upperTheme, localTheme, isPrivate]);\n}\n\n/**\n * This component makes the `theme` available down the React tree.\n * It should preferably be used at **the root of your component tree**.\n *\n * <ThemeProvider theme={theme}> // existing use case\n * <ThemeProvider theme={{ id: theme }}> // theme scoping\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme,\n    themeId\n  } = props;\n  const upperTheme = useThemeWithoutDefault(EMPTY_THEME);\n  const upperPrivateTheme = usePrivateTheme() || EMPTY_THEME;\n  if (process.env.NODE_ENV !== 'production') {\n    if (upperTheme === null && typeof localTheme === 'function' || themeId && upperTheme && !upperTheme[themeId] && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const engineTheme = useThemeScoping(themeId, upperTheme, localTheme);\n  const privateTheme = useThemeScoping(themeId, upperPrivateTheme, localTheme, true);\n  return /*#__PURE__*/_jsx(MuiThemeProvider, {\n    theme: privateTheme,\n    children: /*#__PURE__*/_jsx(StyledEngineThemeContext.Provider, {\n      value: engineTheme,\n      children: children\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  /**\n   * The design system's unique id for getting the corresponded theme when there are multiple design systems.\n   */\n  themeId: PropTypes.string\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"theme\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as SystemThemeProvider } from '@mui/system';\nimport THEME_ID from './identifier';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ThemeProvider(_ref) {\n  let {\n      theme: themeInput\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const scopedTheme = themeInput[THEME_ID];\n  return /*#__PURE__*/_jsx(SystemThemeProvider, _extends({}, props, {\n    themeId: scopedTheme ? THEME_ID : undefined,\n    theme: scopedTheme || themeInput\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;"],"names":["defaultTheme","createTheme","SignUp","dispatch","useDispatch","_jsx","ThemeProvider","theme","children","_jsxs","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Typography","variant","noValidate","onSubmit","event","preventDefault","data","FormData","currentTarget","userData","name","get","email","password","toast","register","unwrap","loading","success","error","err","duration","target","reset","mt","Grid","container","spacing","item","xs","sm","TextField","autoComplete","required","fullWidth","id","label","autoFocus","placeholder","type","Button","mb","Link","to","RegisterPage","html","enableColorScheme","_extends","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","WebkitTextSizeAdjust","vars","colorScheme","palette","mode","body","color","text","primary","typography","body1","backgroundColor","background","default","common","white","inProps","props","useThemeProps","_props$enableColorSch","React","GlobalStyles","styles","_theme$components","arguments","length","undefined","colorSchemeStyles","colorSchemes","Object","entries","forEach","_ref","_scheme$palette","_ref2","_slicedToArray","key","scheme","getColorSchemeSelector","replace","defaultStyles","fontWeight","fontWeightBold","margin","themeOverrides","components","MuiCssBaseline","styleOverrides","useTheme","ThemeContext","Symbol","for","localTheme","outerTheme","output","mergeOuterLocalTheme","nested","value","EMPTY_THEME","useThemeScoping","themeId","upperTheme","isPrivate","resolvedTheme","mergedTheme","result","_defineProperty","useThemeWithoutDefault","upperPrivateTheme","usePrivateTheme","engineTheme","privateTheme","MuiThemeProvider","StyledEngineThemeContext","_excluded","themeInput","_objectWithoutPropertiesLoose","scopedTheme","THEME_ID","SystemThemeProvider"],"sourceRoot":""}